import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,e as a,o as h}from"./app-Ba0Gw2Pi.js";const n={};function l(d,s){return h(),e("div",null,s[0]||(s[0]=[a(`<p>SSH（Secure Shell）是一种安全的远程登录协议。配置 SSH 长连接可以实现免密登录，提高开发和运维效率，同时减少频繁输入密码的烦恼。</p><h2 id="配置步骤" tabindex="-1"><a class="header-anchor" href="#配置步骤"><span>配置步骤</span></a></h2><h3 id="第一步-在客户端生成-ssh-公私钥" tabindex="-1"><a class="header-anchor" href="#第一步-在客户端生成-ssh-公私钥"><span>第一步：在客户端生成 SSH 公私钥</span></a></h3><p>在本地客户端生成一对 SSH 公私钥文件：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-keygen</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>按提示一路回车，采用默认设置。</p></li><li><p>执行后将在用户目录的 <code>~/.ssh</code> 文件夹下生成以下两个文件：</p><ul><li><code>id_rsa</code>: 私钥文件，请妥善保管。</li><li><code>id_rsa.pub</code>: 公钥文件，用于配置到服务器。</li></ul></li></ul><p>检查生成的文件：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="第二步-将公钥上传到服务器" tabindex="-1"><a class="header-anchor" href="#第二步-将公钥上传到服务器"><span>第二步：将公钥上传到服务器</span></a></h3><p>将生成的公钥文件上传到远程服务器的 <code>authorized_keys</code> 文件中。</p><p>假设服务器地址为 <code>192.168.235.22</code>，用户名为 <code>root</code>，执行以下命令：</p><p><strong>注意：</strong><br><code>~/.ssh/id_rsa.pub</code> 是本地公钥的默认路径，但每台电脑的路径可能有所不同。请根据第一步生成的文件位置确认并替换为正确的路径。例如，如果生成的公钥存储在其他位置，请修改命令中的路径：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-copy-id</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh/id_rsa.pub</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root@192.168.235.22</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>上传后，你可以在服务器中查看 <code>~/.ssh/authorized_keys</code> 文件，验证公钥是否写入成功：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root@192.168.235.22</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> authorized_keys</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="第三步-测试免密登录" tabindex="-1"><a class="header-anchor" href="#第三步-测试免密登录"><span>第三步：测试免密登录</span></a></h3><p>上传成功后，尝试使用以下命令登录服务器，无需再输入密码：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root@192.168.235.22</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果登录成功，说明 SSH 长连接配置完成！</p>`,19)]))}const p=i(n,[["render",l]]),c=JSON.parse('{"path":"/software/ssh.html","title":"配置 SSH 长连接","lang":"zh-CN","frontmatter":{"date":"2024-12-11T00:00:00.000Z","title":"配置 SSH 长连接","icon":"install","order":1,"category":"ssh","tag":"ssh"},"git":{"createdTime":1691055743000,"updatedTime":1733897652000,"contributors":[{"name":"储天航","username":"","email":"1193983801@qq.com","commits":7}]},"readingTime":{"minutes":1.33,"words":398},"filePathRelative":"software/ssh.md","excerpt":"<p>SSH（Secure Shell）是一种安全的远程登录协议。配置 SSH 长连接可以实现免密登录，提高开发和运维效率，同时减少频繁输入密码的烦恼。</p>\\n<h2>配置步骤</h2>\\n<h3>第一步：在客户端生成 SSH 公私钥</h3>\\n<p>在本地客户端生成一对 SSH 公私钥文件：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-bash\\"><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">ssh-keygen</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>"}');export{p as comp,c as data};
